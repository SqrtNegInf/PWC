#!/usr/bin/env perl6
# ID characters & counts, from file(s), showing anything not pure ASCII (i.e. .ords.any > 127)
## 2019-11-09
#  croaks on malformed UTF-8, so helpful in tracking that down
#  also useful for ID'ing Unicode that won't display properly

for @*ARGS -> $f {
    next unless $f.IO ~~ :f and my %codes = $f.IO.slurp.comb.grep(*.ords.sort.tail > 127).Bag;
    # 'Bag' replaces idiom '%codes{$_}++ for'
    %codes{'Â©'}:delete;
    next unless %codes;

    say "\n$f";
    printf "%1s: %5d %s\n", $_, %codes{$_}, .uninames.join(', ') for %codes.keys.sort;

    CATCH { default { say qq{Died in "$f" with "$_" } } }
}
