#!/usr/bin/env raku
## run weekly challenge code for a specific task and language
# 2022-02-09 run both backends ('raku') or each separately ('moar', 'jvm')
# 2022-02-02 initial version

sub MAIN ( Int $ch,
           Int $task         where { $task == 1|2 },
           Str $lang is copy where { $lang eq 'raku'|'moar'|'jvm'|'perl' } ) {

  exit if 142 == $ch and 2 == $task; # not testable

  my $ext = $lang eq 'raku'|'moar'|'jvm' ?? 'raku' !! 'pl';

  if $lang eq 'raku'|'moar'|'jvm' {

    my $backend = $lang;
    $lang = 'raku';
    my $prefix-m = "$ch/$task/00-{$lang}-moar";
    my $prefix-j = "$ch/$task/00-{$lang}-jvm";

        #rakubrew switch moar-blead
    shell qq:to/MOAR/ if $backend eq 'raku'|'moar';
        find $ch/$task -name '*$ext' -exec echo ' ' \\; -exec echo "===> \{\} <===" \\; -execdir raku    -I lib \{\} \\; > $prefix-m.txt 2> $prefix-m.err
        MOAR

        #rakubrew switch jvm-2021.12
    shell qq:to/JVM/ if $backend eq 'raku'|'jvm';
        find $ch/$task -name '*$ext' -exec echo ' ' \\; -exec echo "===> \{\} <===" \\; -execdir perl6-j -I lib \{\} \\; > $prefix-j.txt 2> $prefix-j.err
        JVM
        #rakubrew switch moar-blead

    .IO.unlink if .IO.e and ! .IO.s for ("{$prefix-m}.err", "{$prefix-j}.err");
    .IO.unlink if .IO.e and ! .IO.s for ("{$prefix-m}.txt", "{$prefix-j}.txt");  # when the task is skipped entirely

  } else {

    my $prefix = "$ch/$task/00-{$lang}";

    shell qq:to/PERL/;
        find $ch/$task -name '*$ext' -exec echo ' ' \\; -exec echo "===> \{\} <===" \\; -execdir perl \{\} \\; > $prefix.txt 2> $prefix.err
        PERL

    .IO.unlink if .IO.e and ! .IO.s for "{$prefix}.err"; #, "{$prefix}.err";

  }

}
